
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using MyCode;

namespace MyCode.Tests
{
    [TestClass]
    public class MyClassTests
    {
        private MyClass _myClassUnderTest;
        private Mock<IHello> _helloMock;
        private int _x;
        private int _y;
        
        [TestInitialize]
        public void Initialize()
        {  
            _x = 0;
            _y = 0;
            _helloMock = new Mock<IHello>();
            _myClassUnderTest = new MyClass(_x, _y, _helloMock.Object);
        }

        
        [TestMethod]
        public void Sub1Test()
        {
            int g = 0;
            int k = 0;

            int actual = _myClassUnderTest.Sub(g, k);

            int expected = 0;
            Assert.AreEqual(expected, actual);
            Assert.Fail("autogenerated");
        }

        [TestMethod]
        public void ThirdMethod1Test()
        {
            int a = 0;

            _myClassUnderTest.ThirdMethod(a);

            Assert.Fail("autogenerated");
        }

        [TestMethod]
        public void ThirdMethod2Test()
        {
            double a = 0;

            _myClassUnderTest.ThirdMethod(a);

            Assert.Fail("autogenerated");
        }
    }
}